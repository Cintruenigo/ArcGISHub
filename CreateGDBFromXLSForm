
#Author: ichivite@esri.com
import os, csv, arcpy


scratchWorkspace = r"D:\Ismael\Surveys"
surveyName = "Household"
gdb = os.path.join(scratchWorkspace,surveyName + "FGDB.gdb")
featureclass = os.path.join (gdb,"survey")

codedValueDomains = []

def main():

    arcpy.env.overwriteOutput = True
    print ""

    # Unzip input file

    # Create fileGDB
    arcpy.CreateFileGDB_management(scratchWorkspace, out_name=surveyName + "FGDB", out_version="CURRENT")
    
    # Create featureclass schema
    createFCSchemaFromSurvey ()

   
def createFCSchemaFromSurvey():
    
    try:
       surveyCSV = os.path.join(scratchWorkspace, "survey.csv")

       arcpy.CreateFeatureclass_management(gdb, 'survey' ,"POINT", spatial_reference=arcpy.SpatialReference('WGS 1984'))
       hasAttachments = False

       with open(surveyCSV) as csvfile:
         reader = csv.DictReader(csvfile)
         for row in reader:
           fieldType = row['type']
           fieldName = row['name']
           fieldAlias =  row['label']


           # If Type is 'select_one', add a field with its corresponding coded value domain
           if (fieldType.find("select_one ")==0):
             domainName = fieldType.replace("select_one ","")
             print "Adding Field '" + fieldName + "' with Domain: " + domainName
             if not (domainName in codedValueDomains):
                addCodedValueDomain (domainName)
             arcpy.AddField_management(featureclass, fieldName,field_type="TEXT" ,field_alias=fieldAlias, field_domain=domainName)
           # If Type is 'select_multiple', add as many fields as needed to support the choices 
           elif (fieldType.find("select_multiple ")==0):
             choiceList = fieldType.replace("select_multiple ","")
             print "Adding Field '" + fieldName + "' With multiple Selection: " + choiceList
             addFieldsFromMultipleChoice (featureclass,choiceList)
           # If Type is 'image', 'audio' or 'video' enable attachments if not already
           elif (fieldType == "image" or fieldType == "audio" or fieldType == "video"):
             if (hasAttachments == False):
                print "Enabling Attachments"
                arcpy.EnableAttachments_management(in_dataset=featureclass)
                hasAttachments = True
           # Add standard fields as long as the Type is not a 'note', 'group' or empty      
           elif ((fieldType == "text")or (fieldType == "barcode")  or (fieldType == "integer") or (fieldType == "double")or (fieldType == "date") or (fieldType == "time")):
              if (fieldType == "text") or (fieldType=="barcode"):
                fieldType="TEXT"
              elif (fieldType == "integer"):
                fieldType="LONG"
              elif (fieldType == "decimal"):
                fieldType="DOUBLE" 
              elif (fieldType == "date") or (fieldType == "time"):
                fieldType="DATE"
              print "Adding Field: " + fieldName
              arcpy.AddField_management(featureclass, fieldName,field_type=fieldType ,field_alias=fieldAlias)


    except Exception as e:
       print e.message
       arcpy.AddError(e.message)

# Adds a Coded Value Domain to workspace based on choiceList
def addCodedValueDomain(inputChoiceListName):                   
    print "   addCodedValueDomain {" + inputChoiceListName + " )"
    try:
        
       if (inputChoiceListName in codedValueDomains):
           print "   coded value domain already exists. Skipping..."
           return

       arcpy.CreateDomain_management(in_workspace=gdb, domain_name=inputChoiceListName, domain_description=inputChoiceListName, field_type="TEXT", domain_type="CODED", split_policy="DEFAULT", merge_policy="DEFAULT")
       codedValueDomains.append(inputChoiceListName)
    
       choicesCSV = os.path.join(scratchWorkspace, "choices.csv")
       with open(choicesCSV) as csvfile:
         reader = csv.DictReader(csvfile)
         for row in reader:
            domainName = row['list name']
            if (domainName == inputChoiceListName):                 
                 codedValue = row['name']
                 codedDescription = row['label']
                 print "     adding coded value: " + codedValue + ":" + codedDescription
                 arcpy.AddCodedValueToDomain_management(in_workspace=gdb, domain_name=domainName, code=codedValue, code_description=codedDescription)
                

    except Exception as e:
       print e.message
       arcpy.AddError(e.message)
# Adds fields to a FC to support multiple choices questions.
def addFieldsFromMultipleChoice(inputFeatureclass,inputChoiceListName):
    print "   addFieldsFromMultipleChoice(" + inputChoiceListName + ")"
    try:
       choicesCSV = os.path.join(scratchWorkspace, "choices.csv")
       with open(choicesCSV) as csvfile:
         reader = csv.DictReader(csvfile)
         for row in reader:
            choiceListName = row['list name']
            
            if (choiceListName==inputChoiceListName):
                fieldName = row['name']
                fieldAlias = row['label']
                print "     adding Choice as new Field: '" + fieldName + "'"
                arcpy.AddField_management(inputFeatureclass, fieldName,field_type="SHORT" ,field_alias=fieldAlias)
                

    except Exception as e:
       print e.message
       arcpy.AddError(e.message)
        
if __name__ == "__main__":
     main()
